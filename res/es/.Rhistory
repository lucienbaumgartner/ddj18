filter(zuz, duplicated(zuz)) ###! generating 117 possible drop outs
###! now we filter them (you did it right, so I just take your code; you could also just simply use filter())
zuz <- zuz[!duplicated(zuz$PersNum),]
#Aus dem Einkommensdatensatz benoetige ich nur PersNum + aeq Einkommen + StichtagDatJahr
###! good call! But ther is no persnum in the einkommensdata, it's Haushalts??quivalenzeinkommen
###! thus you have to join over gebnum and ewid later, which is why I included the variable when subsetting df
eink <- select(einkommen, GebNum, aeq_Einkommen, EWID)
##### nun diese datensaetze mergen #####
# Zuerst Alter und Zuzug Datensaetze mergen
###! joins are much more controlled than a simple merge; use an recursively iterative left join for single line beauty
###! it is suuuuuper important that you use bev as first element, since it is the biggest data set and will inflate all other variables from the other datasets
df <- as_tibble(join_all(list(df, zuz, eink), type = 'left'))
###! and now you have to filter out all the people who didn't migrate to zurich that year (they have an NA in ZuzLandHistLang) OR have no information about their income
df <- filter(df, !(is.na(ZuzLandHistLang)|is.na(aeq_Einkommen)))
df
nrow(df)==length(duplicated(df))
df <- df[!duplicated(df),]
df
bevoelkerung %>%
mutate(buckets=case_when(
StichtagDatJahr >= 1990 & StichtagDatJahr <= 1995 ~ '1990-1995',
StichtagDatJahr >= 1996 & StichtagDatJahr <= 2000 ~ '1996-2000',
StichtagDatJahr >= 2001 & StichtagDatJahr <= 2005 ~ '2001-2005',
StichtagDatJahr >= 2006 & StichtagDatJahr <= 2010 ~ '2006-2010',
StichtagDatJahr >= 2011 & StichtagDatJahr <= 2015 ~ '2011-2015',
StichtagDatJahr >= 2016 & StichtagDatJahr <= 2020 ~ '2016-2020'
)) %>%
group_by(PersNum, buckets) %>%
summarise(n=n())
detach("package:plyr", unload=TRUE)
bevoelkerung %>%
mutate(buckets=case_when(
StichtagDatJahr >= 1990 & StichtagDatJahr <= 1995 ~ '1990-1995',
StichtagDatJahr >= 1996 & StichtagDatJahr <= 2000 ~ '1996-2000',
StichtagDatJahr >= 2001 & StichtagDatJahr <= 2005 ~ '2001-2005',
StichtagDatJahr >= 2006 & StichtagDatJahr <= 2010 ~ '2006-2010',
StichtagDatJahr >= 2011 & StichtagDatJahr <= 2015 ~ '2011-2015',
StichtagDatJahr >= 2016 & StichtagDatJahr <= 2020 ~ '2016-2020'
)) %>%
group_by(PersNum, buckets) %>%
summarise(n=n())
vec <-
bevoelkerung %>%
mutate(buckets=case_when(
StichtagDatJahr >= 1990 & StichtagDatJahr <= 1995 ~ '1990-1995',
StichtagDatJahr >= 1996 & StichtagDatJahr <= 2000 ~ '1996-2000',
StichtagDatJahr >= 2001 & StichtagDatJahr <= 2005 ~ '2001-2005',
StichtagDatJahr >= 2006 & StichtagDatJahr <= 2010 ~ '2006-2010',
StichtagDatJahr >= 2011 & StichtagDatJahr <= 2015 ~ '2011-2015',
StichtagDatJahr >= 2016 & StichtagDatJahr <= 2020 ~ '2016-2020'
)) %>%
group_by(PersNum, buckets) %>%
summarise(n=n()) %>%
print(n=100) %>%
filter(n<5) %>%
.$PersNum %>%
unique
vec
library(dplyr)
library(data.table)
###! set your working directory
setwd('~/ddj18/input/st-zh/Daten/')
###! remove all objects before running your script
rm(list=ls())
bevoelkerung <- fread("bevoelkerung.csv")
oelkerung
bev <- fread("bevoelkerung.csv")
subset_schweiz <- bev%>%filter(NationHistLang%in%"Schweiz")
subset_schweiz <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang) %>%
summarise(n=n())
subset_schweiz <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n())
subset_schweiz
bev.sub <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n()) %>%
# as you can see, there is a HHTypLang == "" if your work with the uncleaned data.
# let's filter that out
print %>%
unroup %>%
filter(!HHtypLang=="")
bev.sub <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n()) %>%
# as you can see, there is a HHTypLang == "" if your work with the uncleaned data.
# let's filter that out
print %>%
ungroup %>%
filter(!HHtypLang=="")
ggplot(bev.sub, aes(y=HHTypeLang, x=n, colour=NationHistLang)) +
geom_point()
ggplot(bev.sub, aes(y=HHTypLang, x=n, colour=NationHistLang)) +
geom_point()
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point()
## generate data for
bev.sub <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n()) %>%
# as you can see, there is a HHTypLang == "" if your work with the uncleaned data.
# let's filter that out
print %>%
filter(!HHtypLang=="") %>%
# now we compute the in-group shares
mutate(perc=n/sum(n))
## generate data for
bev.sub <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n()) %>%
# as you can see, there is a HHTypLang == "" if your work with the uncleaned data.
# let's filter that out
print %>%
filter(!HHtypLang=="") %>%
# now we compute the in-group shares
mutate(perc=n/sum(n)) %>%
print
## generate data for
bev.sub <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n()) %>%
# as you can see, there is a HHTypLang == "" if your work with the uncleaned data.
# let's filter that out
print %>%
filter(!HHtypLang=="") %>%
# now we compute the in-group shares
mutate(perc=n/sum(n)) %>%
print
# now let's check if the percentages add up to one for each group
bev.sub %>%
summarise(check=sum(perc))
# now let's check if the percentages add up to one for each group
# since NationHistLang is still a grouping variable, we don't need to group again but can instead directly summarize
bev.sub %>%
summarise(check=sum(perc))
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang)) +
geom_point()
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang)) +
geom_point() +
scale_x_continuous(labels=scales:percentage)
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang)) +
geom_point() +
scale_x_continuous(labels=scales::percentage)
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang)) +
geom_point() +
scale_x_continuous(labels=scales::percent)
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=Nationhistlang)) +
geom_point(alpha=0.8) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp')
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp')
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light()
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=1) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light()
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light()
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
geom_segment() +
xlab('') +
ylab('Haushaltstyp') +
theme_light()
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light()
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
labs(title='Some title', subtitle='Some subtitle')
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(fill=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
## percentages
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape= guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
# let's plot
## integer values
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point() +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
setwd('~/ddj18/res/es/')
# let's plot
## integer values
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point() +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_integer.png', height=10, width=10)
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_perc.png', height=10, width=10)
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point() +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_integer.png', height=8, width=8)
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_perc.png', height=8, width=8)
Sys.setlocale("LC_CTYPE", "german")
Sys.setlocale("LC_CTYPE", "UTF-8")
###! set your working directory
setwd('~/ddj18/input/st-zh/Daten/')
###! remove all objects before running your script
rm(list=ls())
bev <- fread("bevoelkerung.csv")
setwd('~/ddj18/res/es/')
## generate data for
bev.sub <-
bev %>%
# generate subset with German and Swiss people in 2017
filter(NationHistLang%in%c("Schweiz", 'Deutschland')&StichtagDatJahr==2017) %>%
group_by(NationHistLang, HHtypLang) %>%
summarise(n=n()) %>%
# as you can see, there is a HHTypLang == "" if your work with the uncleaned data.
# let's filter that out
print %>%
filter(!HHtypLang=="") %>%
# now we compute the in-group shares
mutate(perc=n/sum(n)) %>%
print
# now let's check if the percentages add up to one for each group
# since NationHistLang is still a grouping variable, we don't need to group again but can instead directly summarize
bev.sub %>%
summarise(check=sum(perc))
# let's plot
## integer values
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point() +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_integer.png', height=8, width=8)
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_perc.png', height=8, width=8)
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent, expand=c(0.01, 0.01)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent, expand=c(0, 0)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
1*10^-3
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent, expand=c(1*10^-3, 1*10^-3)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent, expand=c(1*10^-2, 1*10^-2)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent, expand=c(1*10^-2.5, 1*10^-2.5)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
# let's plot
## integer values
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point() +
scale_x_continuous(expand=c(1*10^-2.5, 1*10^-2.5)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
# let's plot
## integer values
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(expand=c(1*10^-2.5, 1*10^-2.5)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
# let's plot
## integer values
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(expand=c(1*10^-2.5, 1*10^-2.5)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
# let's plot
## integer values
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(expand=c(1*10^-2, 1*10^-2)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=n, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(expand=c(1*10^-2, 1*10^-2)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_integer.png', height=8, width=8)
## percentages
q <-
ggplot(bev.sub, aes(y=HHtypLang, x=perc, colour=NationHistLang, shape=NationHistLang)) +
geom_point(alpha=0.8, size=3) +
scale_x_continuous(labels=scales::percent, expand=c(1*10^-2.5, 1*10^-2.5)) +
xlab('') +
ylab('Haushaltstyp') +
theme_light() +
guides(color=guide_legend(title="Nationalität"),
shape=guide_legend(title="Nationalität")) +
labs(title='Some title', subtitle='Some subtitle')
q
ggsave(q, filename = 'dot_plot_perc.png', height=8, width=8)
source('~/ddj18/res/es/dot_plot.R')
source('~/ddj18/res/es/dot_plot.R')
source('~/ddj18/res/es/dot_plot.R')
###! remove all objects before running your script
rm(list=ls())
